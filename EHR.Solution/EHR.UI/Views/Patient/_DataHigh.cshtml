@using EHR.Domain.Entities
@using EHR.Domain.Util
@using EHR.UI.Models
<h3>Dados da Alta</h3>
<hr />
<br />
<form id="dataHigh">
    <label>Tipo Alta:</label>&nbsp;
    @foreach (var value in Enum.GetValues(typeof(HighTypeEnum)).Cast<short>().ToList())
    {
        <input type="radio" name="highType"  @if (value == 1)
                                             { 
                                                 @:required 
                                             }  value="@value" style="margin-right: 2px;"/>
        @(EnumUtil.GetDescriptionFromEnumValue((HighTypeEnum)Enum.Parse(typeof(HighTypeEnum), value.ToString())))
    }
    <br />
    <br />
    <label>Condi&ccedil;&atilde;o do paciente na alta:</label>&nbsp;
    @foreach (var value in Enum.GetValues(typeof(ConditionOfThePatientAtHighEnum)).Cast<short>().ToList())
    {
        <input type="radio" name="ConditionOfThePatientAtHigh"  @if (value == 1)
                                                                { 
                                                 @:required 
                                             }  value="@value" style="margin-right: 2px;"/>
        @(EnumUtil.GetDescriptionFromEnumValue((ConditionOfThePatientAtHighEnum)Enum.Parse(typeof(ConditionOfThePatientAtHighEnum), value.ToString())))
    }
    <br />
    <br />
    <label>Destino do paciente na alta:</label>&nbsp;
    @foreach (var value in Enum.GetValues(typeof(DestinationOfThePatientAtDischargeEnum)).Cast<short>().ToList())
    {
        <input type="radio" name="DestinationOfThePatientAtDischarge"  @if (value == 1)
                                                                       { 
                                                 @:required 
                                             }  value="@value" style="margin-right: 2px;"/>
        @(EnumUtil.GetDescriptionFromEnumValue((DestinationOfThePatientAtDischargeEnum)Enum.Parse(typeof(DestinationOfThePatientAtDischargeEnum), value.ToString())))
    }
    <br />
    <hr />
    <br />
    <label>Orienta&ccedil;&atilde;o das equipes multidisciplinares preenchidas:</label>&nbsp;
    @foreach (var value in Enum.GetValues(typeof(OrientationOfMultidisciplinaryTeamsMetEnum)).Cast<short>().ToList())
    {
        <input type="radio" name="OrientationOfMultidisciplinaryTeamsMet"  @if (value == 1)
                                                                           { 
                                                 @:required 
                                             }  value="@value" style="margin-right: 2px;"/>
        @(EnumUtil.GetDescriptionFromEnumValue((OrientationOfMultidisciplinaryTeamsMetEnum)Enum.Parse(typeof(OrientationOfMultidisciplinaryTeamsMetEnum), value.ToString())))
    }
    <br />
    <br />
    <label>Prazo de revisão médica em (Dias):</label>&nbsp;
    <input type="text" name="TermMedicalReviewAt" size="3" />&nbsp;&nbsp;
    <label>Especialidade:</label>&nbsp;
    <input type="text" required style="margin-left: 10px;" onclick="GenericAutoComplete(this, '../Patient/SpecialtyAutoComplete', '#Specialty')" />
    <input type="hidden" name="Specialty" id="Specialty" />
    <br />
    <hr />
    <br />
    <label>Exames complementares p&oacute;s alta:</label>&nbsp;
    <input type="text" id="examesPosAlta" name="examesPosAlta" />
    <br />
    <hr />
    <br />
    <label>CRM:</label>&nbsp;<input type="text" disabled value="@(((SummaryModel)Model).Account.CRM)" />
    <br />
    <br />

    <label>M&eacute;dico:</label>&nbsp;<input type="text" disabled value="@(string.Concat(((SummaryModel)Model).Account.FirstName, " ", ((SummaryModel)Model).Account.LastName))"/>

    <br />
    <br />
    <label>Alta Prescrita:</label>&nbsp;
    @{
        ViewBag.Context = "PrescribedHigh";
        Html.RenderPartial("_DatePicker");
    }
    <br />
    <hr />
    <br />
    <label>Sum&aacute;rio entregue a:</label>&nbsp;
    <input type="text" name="PersonWhoDeliveredTheSummary" required />
    <br />
    <br />
    <label>Data:</label>&nbsp;
    @{
        ViewBag.Context = "DeliveredDate";
        Html.RenderPartial("_DatePicker");
    }
    <br />
    <hr />
    <br />
    <input type="submit" value="Salvar" class="uibutton large confirm" />&nbsp;&nbsp;
    <input type="reset" value="Cancelar" class="uibutton large" />
</form>
