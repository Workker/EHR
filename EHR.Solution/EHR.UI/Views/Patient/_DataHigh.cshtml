@using System.Globalization
@using EHR.Domain.Entities
@using EHR.Domain.Util
@using EHR.UI.Models
<h3>Dados da Alta</h3>
<hr />
<br />
<form id="dataHigh">
    <label>Tipo Alta:</label>&nbsp;
    @foreach (var value in Enum.GetValues(typeof(HighTypeEnum)).Cast<short>().ToList())
    {
        <input type="radio" name="highType"  @if (value == 1)
                                             { 
                                                 @:required 
                                             }  value="@value" style="margin-right: 2px;" @if (((SummaryModel)Model).HighData.HighType == value)
                                                                                          {
                                                                                              @:checked
                                                                                          } />
        @EnumUtil.GetDescriptionFromEnumValue((HighTypeEnum)Enum.Parse(typeof(HighTypeEnum), value.ToString(CultureInfo.InvariantCulture)))
    }
    <br />
    <br />
    <label>Condi&ccedil;&atilde;o do paciente na alta:</label>&nbsp;
    @foreach (var value in Enum.GetValues(typeof(ConditionOfThePatientAtHighEnum)).Cast<short>().ToList())
    {
        <input type="radio" name="ConditionOfThePatientAtHigh"  @if (value == 1)
                                                                { 
                                                                    @:required 
                                                                }  value="@value" style="margin-right: 2px;" @if (((SummaryModel)Model).HighData.ConditionOfThePatientAtHigh == value)
                                                                                                             {
                                                                                              @:checked
                                                                                          }/>
        @EnumUtil.GetDescriptionFromEnumValue((ConditionOfThePatientAtHighEnum)Enum.Parse(typeof(ConditionOfThePatientAtHighEnum), value.ToString(CultureInfo.InvariantCulture)))
    }
    <br />
    <br />
    <label>Destino do paciente na alta:</label>&nbsp;
    @foreach (var value in Enum.GetValues(typeof(DestinationOfThePatientAtDischargeEnum)).Cast<short>().ToList())
    {
        <input type="radio" name="DestinationOfThePatientAtDischarge"  @if (value == 1)
                                                                       { 
                                                                           @:required 
                                                                       }  value="@value" style="margin-right: 2px;" @if (((SummaryModel)Model).HighData.DestinationOfThePatientAtDischarge == value)
                                                                                                                    {
                                                                                              @:checked
                                                                                          }/>
        @EnumUtil.GetDescriptionFromEnumValue((DestinationOfThePatientAtDischargeEnum)Enum.Parse(typeof(DestinationOfThePatientAtDischargeEnum), value.ToString(CultureInfo.InvariantCulture)))
    }
    <br />
    <hr />
    <br />
    <label>Orienta&ccedil;&atilde;o das equipes multidisciplinares preenchidas:</label>&nbsp;
    @foreach (var value in Enum.GetValues(typeof(OrientationOfMultidisciplinaryTeamsMetEnum)).Cast<short>().ToList())
    {
        <input type="radio" name="OrientationOfMultidisciplinaryTeamsMet"  @if (value == 1)
                                                                           { 
                                                                               @:required 
                                                                           }  value="@value" style="margin-right: 2px;"@if (((SummaryModel)Model).HighData.OrientationOfMultidisciplinaryTeamsMet == value)
                                                                                                                       {
                                                                                              @:checked
                                                                                          }/>
        @EnumUtil.GetDescriptionFromEnumValue((OrientationOfMultidisciplinaryTeamsMetEnum)Enum.Parse(typeof(OrientationOfMultidisciplinaryTeamsMetEnum), value.ToString(CultureInfo.InvariantCulture)))
    }
    <br />
    <br />
    <label>Prazo de revisão médica em (Dias):</label>&nbsp;
    <input type="text" name="TermMedicalReviewAt" size="3" value="@(((SummaryModel)Model).HighData.TermMedicalReviewAt)" />&nbsp;&nbsp;
    <label>Especialidade:</label>&nbsp;
    <input type="text" required style="margin-left: 10px;" name="Specialty.Description" value="@(((SummaryModel)Model).HighData.Specialty != null ? ((SummaryModel)Model).HighData.Specialty.Description : "")" onclick="GenericAutoComplete(this, '../Patient/SpecialtyAutoComplete', '#Specialty')" />
    <input type="hidden" name="Specialty.id" id="Specialty" value="@(((SummaryModel)Model).HighData.Specialty != null ? ((SummaryModel)Model).HighData.Specialty.Id : 0)" />
    <br />
    <hr />
    <br />
    <h3>Exames complementares p&oacute;s alta:</h3>
    <br />
    @{
        Html.RenderPartial("DataHigh/_ComplementaryExamTable");
    }
    <br />
    <hr />
    <br />
    <label>CRM:</label>&nbsp;<input type="text" disabled value="@(((SummaryModel)Model).Account.Crm)" />
    <br />
    <br />

    <label>M&eacute;dico:</label>&nbsp;<input type="text" disabled value="@(string.Concat(((SummaryModel)Model).Account.FirstName, " ", ((SummaryModel)Model).Account.LastName))"/>

    <br />
    <br />
    <label>Alta Prescrita:</label>&nbsp;
    @{
        ViewBag.Context = "PrescribedHigh";
        Html.RenderPartial("_DatePicker");
    }
    <br />
    <hr />
    <br />
    <label>Sum&aacute;rio entregue a:</label>&nbsp;
    <input type="text" name="PersonWhoDeliveredTheSummary" required value="@(((SummaryModel)Model).HighData.PersonWhoDeliveredTheSummary)" />
    <br />
    <br />
    <label>Data:</label>&nbsp;
    @{
        ViewBag.Context = "DeliveredDate";
        Html.RenderPartial("_DatePicker");
    }
    <br />
    <hr />
    <br />
    <input type="submit" value="Salvar" class="uibutton large confirm" />&nbsp;&nbsp;
    <input type="reset" value="Cancelar" class="uibutton large" />
    <script type="text/javascript">
        
        $('[name="PrescribedHighyear"]').val(@(((SummaryModel)Model).HighData.PrescribedHighYear));
        $('[name="PrescribedHighmonth"]').val(@(((SummaryModel)Model).HighData.PrescribedHighMonth));
        $('[name="PrescribedHighday"]').val(@(((SummaryModel)Model).HighData.PrescribedHighDay));

        $('[name="DeliveredDateyear"]').val(@(((SummaryModel)Model).HighData.DeliveredDateYear));
        $('[name="DeliveredDatemonth"]').val(@(((SummaryModel)Model).HighData.DeliveredDateMonth));
        $('[name="DeliveredDateday"]').val(@(((SummaryModel)Model).HighData.DeliveredDateDay));

        $(document).on('submit', '#dataHigh', function (e) {
            e.preventDefault();
            data = $(this).serialize();
            $.ajax({
                type: "POST",
                url: '../Patient/SaveHighData',
                cache: false,
                data: data,
                success: function () {
                }
            });
        });

    </script>
</form>
