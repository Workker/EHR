@using System
@using System.Collections.Generic
@using System.Globalization
@using System.Linq
@using EHR.Domain.Entities
@using EHR.Infrastructure.Util
@{
    ViewBag.Title = "Rede D'or São Luiz - Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Page
{
    <div id="pagelet_bluebar">
        <div id="blueBarHolder">
            <div id="blueBar">
                <div class="loggedout_menubar_container">
                    <div class="clearfix loggedout_menubar">
                        <a href="#" title="Rede D'or S&atilde;o Luiz" class="lfloat"><i class="fb_logo img sp_6jxgq1 sx_df432d">Rede D'or S&atilde;o Luiz logo</i></a>
                        <div class="menu_login_container rfloat">
                            <form id="login_form" action="../Account/Login" method="post">
                                <table>
                                    <tbody>
                                        <tr>
                                            <td class="html7magic">
                                                <label for="email">E-mail</label>
                                            </td>
                                            <td class="html7magic">
                                                <label for="password">Senha</label>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>
                                                <input name="Email" type="email" id="email" required tabindex="1" class="inputtext">
                                            </td>
                                            <td>
                                                <input name="Password" id="password" type="password" required tabindex="2" class="inputtext">
                                            </td>
                                            <td>
                                                <label for="loginButton" class="uiButton uiButtonConfirm">
                                                    <input name="loginButton" type="submit" value="Entrar" tabindex="4">
                                                </label>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="uiContextualLayerParent">
        <div class="fb_content clearfix">
            <div style="background: #E7EBF2; min-width: 980px">
                <div class="pvl" style="width: 980px; margin: 0 auto">
                    <div class="fbIndexMap _6_ _76">
                        <div class="title fsl fwb fcb">Hospitais particulares e Medicina Diagn&oacute;stica</div>
                        <img src="../../Images/doctor.png" alt="Doctor" class="mtl mtl img" />
                    </div>
                    <div class="_6_ _74">
                        <h1 class="mbs _3ma _6n _6s _6v" style="font-size: 36px">Cadastre-se</h1>
                        <div class="_52ls">
                            <div id="reg_box" class="registration_redesign">
                                <form method="post" id="reg" name="reg" action="../Account/Register" class="registerForm">
                                    <div id="reg_form_box" class="large_form">
                                        <div class="clearfix short_fields">
                                            <div class="mrm lfloat">
                                                <input type="text" name="FirstName" placeholder="Nome" class="inputtext text_field" maxlength="65" />
                                            </div>
                                            <div class="mbm rfloat" style="margin-right: -10px;">
                                                <input type="text" name="LastName" placeholder="Sobrenome" class="inputtext text_field" style="margin-right: -15px;" maxlength="65" />
                                            </div>
                                        </div>
                                        <div class="clearfix short_fields">
                                            <div class="mrm lfloat" style="padding-top: 10px;">
                                                @foreach (var value in Enum.GetValues(typeof(ProfessionalRegistrationTypeEnum)).Cast<short>().ToList())
                                                {
                                                    <input type="radio" id="DocumentType" name="ProfessionalRegistration[0].Type" value="@value" @if (value == 1) {  @: required
                                                                                                                                                                                       } />
                                                    <label for="DocumentType" class="gender_label">
                                                        @(EnumUtil.GetDescriptionFromEnumValue((ProfessionalRegistrationTypeEnum)Enum.Parse(typeof(ProfessionalRegistrationTypeEnum), value.ToString(CultureInfo.InvariantCulture))) + "  ")
                                                    </label>
                                                }

                                            </div>
                                            <div class="mbm rfloat" style="margin-right: -10px;">
                                                <table style="margin-right: -15px;">
                                                    <tr>
                                                        <td style="padding-right: 6px;">
                                                            <input type="text" name="ProfessionalRegistration[0].Number" required placeholder="N&uacute;mero" class="inputtext text_field" style="width: 136px;" maxlength="10" />
                                                        </td>
                                                        <td style="border: 1px solid #bdc7d8; background-color: #fff;">
                                                            <select name="ProfessionalRegistration[0].State.Id" required style="width: 110px; border: 0px; font-size: 18px; color: #6d6d6d;">
                                                                <option value="-1">Estado</option>
                                                                @foreach (EHR.CoreShared.Entities.State value in (IList<EHR.CoreShared.Entities.State>)Session["States"])
                                                                {
                                                                    <option value="@value.Id">
                                                                        @value.Acronym
                                                                    </option>
                                                                }

                                                            </select>

                                                        </td>
                                                    </tr>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="mbm">
                                            <input type="email" name="email" placeholder="Seu e-mail" class="inputtext text_field" />
                                        </div>
                                        <div class="mbm">
                                            <input type="email" name="emailConfirmation" placeholder="Insira o e-mail novamente" class="inputtext text_field" />
                                        </div>
                                        <div class="mbm">
                                            <input type="password" name="password" placeholder="Nova senha" class="inputtext text_field" />
                                        </div>
                                        <div class="mbm">
                                            <input type="text" name="Birthday" style="width: 160px" maxlength="10" class="inputtext text_field" placeholder="Data de nascimento">
                                        </div>
                                        <div class="mtl mbm">
                                            @foreach (var value in Enum.GetValues(typeof(GenderEnum)).Cast<short>().ToList())
                                            {
                                                <div class="uiInputLabel clearfix inlineBlock">
                                                    <input type="radio" name="gender" id="gender" @*@if (value == 1)
                                                                                                   {
                                                                                                        @:required
                                                                                                    }*@ value="@value" class=" uiInputLabelRadio">
                                                    <label for="gender" class="gender_label">@(EnumUtil.GetDescriptionFromEnumValue((GenderEnum)Enum.Parse(typeof(GenderEnum), value.ToString(CultureInfo.InvariantCulture))) + "  ")</label>
                                                </div>
                                            }
                                        </div>
                                        <div class="mtm mbs birthday_label">Escolha o hospital em que você mais atua:</div>
                                        <div class="mbm">
                                            @{
                                                var hospitals = ViewBag.hospitals;
                                            }
                                            <table style="margin-left: -3px;">
                                                <tr>
                                                    @for (
                                                        int count = 0; count < hospitals.Count; count++)
                                                    {
                                                        if (count % 3 == 0)
                                                        {
                                                            WriteLiteral("</tr><tr>");
                                                        }

                                                        <td style="padding: 3px 3px 3px 3px;">
                                                            <input name="hospital" type="radio"
                                                                   value="@hospitals[count].Id" />
                                                            <label style="font-size: 14px; color: #333;">@(@hospitals[count].Name + "  ")</label><br />
                                                        </td>
                                                    }
                                                </tr>
                                            </table>
                                        </div>
                                        <div class="reg_btn clearfix">
                                            <button type="submit" class="_6j mvm _6wk _6wl signup_button _3ma _6o _6v">Cadastre-se</button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section scripts
{
    <script type="text/javascript" src="~/Scripts/AjaxFlagMenu-1.0.2.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.maskedinput.min.js"></script>
    <script type="text/javascript">

        $.datepicker.setDefaults($.extend({ 'dateFormat': 'dd/mm/yy' }, $.datepicker.regional['pt-BR']));

        $("document").ready(function () {

            $("input[name='Birthday']").datepicker();
            $("input[name='Birthday']").mask("99/99/9999");

            $("input[name='FirstName']").keypress(function (event) {

                if (!onlyLetters(event))
                    event.preventDefault();
            });

            $("input[name='LastName']").keypress(function (event) {

                if (!onlyLetters(event))
                    event.preventDefault();
            });

            $("input[name='ProfessionalRegistration[0].Number']").keypress(function (event) {
                if (!onlyNumbers(event))
                    event.preventDefault();
            });

            $("button[class~='signup_button']").click(function (event) {

                return ValidateForm();
            });

        });

        function ValidateForm() {

            //validate first name
            var firstNameField = $("input[name='FirstName']");

            if (firstNameField.val() === "") {
                displayMessage("O campo nome não pode ser vazio", "error");
                //MarkInvalidField(firstNameField);
                firstNameField.focus();
                return false;
            }

            if (!VerifyIfTextContainsOnlyLetters(firstNameField.val())) {

                displayMessage("O campo nome deve conter somente letras.", "error");
                //MarkInvalidField(firstNameField);
                firstNameField.focus();
                return false;
            }

            //validate last name
            var lastNameField = $("input[name='LastName']");

            if (lastNameField.val() === "") {
                displayMessage("O campo sobrenome não pode ser vazio", "error");
                //MarkInvalidField(lastNameField);
                lastNameField.focus();
                return false;
            }

            if (!VerifyIfTextContainsOnlyLetters(lastNameField.val())) {

                displayMessage("O campo nome deve conter somente letras.", "error");
                //MarkInvalidField(lastNameField);
                lastNameField.focus();
                return false;
            }

            //validate crm/cro
            var professionalRegistrationRadios = $("input[name='ProfessionalRegistration[0].Type']");

            if ((professionalRegistrationRadios[0].checked == false) && (professionalRegistrationRadios[1].checked == false)) {
                displayMessage("O tipo de registro profissional deve ser selecionado", "error");
                //MarkInvalidField(professionalRegistrationRadios[0]);
                professionalRegistrationRadios[0].focus();
                return false;
            }

            //validate crm/cro number
            var professionalRegistrationField = $("input[name='ProfessionalRegistration[0].Number']");

            if (professionalRegistrationField.val() === "") {
                displayMessage("O número do CRM/ CRO não pode ser vazio.", "error");
                //MarkInvalidField(professionalRegistrationField);
                professionalRegistrationField.focus();
                return false;
            }

            if (!VerifyIfTextContainsOnlyNumbers(professionalRegistrationField.val())) {

                displayMessage("O número do CRM/ CRO deve conter somente números.", "error");
                //MarkInvalidField(professionalRegistrationField);
                professionalRegistrationField.focus();
                return false;
            }

            //validate state
            var stateField = $("select[name='ProfessionalRegistration[0].State.Id']");

            if (stateField.val() === "-1") {
                displayMessage("Um estado deve ser selecionado.", "error");
                stateField.focus();
                //MarkInvalidField(stateField.parent());
                return false;
            }

            //Verify if email is valid
            function ValidadeEmail(email) {

                var regex = /[-0-9a-zA-Z.+_]+@@[-0-9a-zA-Z.+_]+\.[a-zA-Z]{2,4}/;

                if (!regex.test(email))
                    return false;
                else
                    return true;
            }

            //validate first email
            var firstEmailField = $("input[name='email']");

            if (firstEmailField.val() === "") {
                displayMessage("O campo de email deve ser preenchido.", "error");
                //MarkInvalidField(firstEmailField);
                firstEmailField.focus();
                return false;
            }

            if (!ValidadeEmail(firstEmailField.val())) {
                displayMessage("Email inválido.", "error");
                //MarkInvalidField(firstEmailField);
                firstEmailField.focus();
                return false;
            }

            //validade second email
            var secondEmailField = $("input[name='emailConfirmation']");

            if (secondEmailField.val() === "") {
                displayMessage("O campo de confirmação de email deve ser preenchido.", "error");
                //MarkInvalidField(secondEmailField);
                secondEmailField.focus();
                return false;
            }

            if (!ValidadeEmail(secondEmailField.val())) {
                displayMessage("Email inválido.", "error");
                //MarkInvalidField(secondEmailField);
                secondEmailField.focus();
                return false;
            }

            //Validate if both emails are equal
            if (!(firstEmailField.val() == secondEmailField.val())) {
                displayMessage("Os emails digitados não correspondem, por favor verifique.", "error");
                //MarkInvalidField(firstEmailField);
                firstEmailField.focus();
                return false;
            }

            //Validade password
            var passwordField = $("input[name='password']");

            if (passwordField.val() === "") {
                displayMessage("O campo senha deve ser preenchido.", "error");
                //MarkInvalidField(passwordField);
                passwordField.focus();
                return false;
            }

            //validade birth date
            var birthdateField = $("input[name='Birthday']");

            if (birthdateField.val() === "") {
                displayMessage("O campo data de nascimento deve ser preenchido.", "error");
                //MarkInvalidField(birthdateField);
                birthdateField.focus();
                return false;
            }

            var regex = /^(?=\d)(?:(?:31(?!.(?:0?[2469]|11))|(?:30|29)(?!.0?2)|29(?=.0?2.(?:(?:(?:1[6-9]|[2-9]\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00)))(?:\x20|$))|(?:2[0-8]|1\d|0?[1-9]))([-./])(?:1[012]|0?[1-9])\1(?:1[6-9]|[2-9]\d)?\d\d(?:(?=\x20\d)\x20|$))?(((0?[1-9]|1[012])(:[0-5]\d){0,2}(\x20[AP]M))|([01]\d|2[0-3])(:[0-5]\d){1,2})?$/

            if (!(regex.test(birthdateField.val()))) {

                displayMessage("Data inválida.", "error");
                birthdateField.focus();
                return false;
            }

            //validate gender
            var genderField = $("input[name='gender']");

            if ((genderField[0].checked == false) && (genderField[1].checked == false)) {
                displayMessage("O campo sexo deve ser selecionado.", "error");
                //MarkInvalidField(genderField[0]);
                genderField[0].focus();
                return false;
            }

            //validate hospital
            var hospitalField = $("input[name='hospital']");

            for (i = 0; i < hospitalField.length; i++) {

                if (hospitalField[i].checked == true) {

                    return true;
                }
            }

            displayMessage("Um hospital deve ser selecionado.", "error");
            //MarkInvalidField(hospitalField[0]);
            hospitalField[0].focus();
            return false;
        }

    </script>

}