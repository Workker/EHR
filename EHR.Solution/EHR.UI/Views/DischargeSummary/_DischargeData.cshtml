@using System.Globalization
@using EHR.Domain.Entities
@using EHR.Infrastructure.Util
@using EHR.UI.Models
<h3>Dados da Alta</h3>
<hr />
<br />
<form id="dischargeData" style="padding-bottom: 20px;">
    <label>Tipo Alta:</label>&nbsp;
    @foreach (var value in Enum.GetValues(typeof(HighTypeEnum)).Cast<short>().ToList())
    {
        <input type="radio" name="highType"  @if (value == 1)
                                             { 
                                                 @:required 
                                             }  value="@value" style="margin-right: 2px;" @if (((SummaryModel)Model).DischargeData.HighType == value)
                                                                                          {
                                                                                              @:checked
                                                                                          } />
        @EnumUtil.GetDescriptionFromEnumValue((HighTypeEnum)Enum.Parse(typeof(HighTypeEnum), value.ToString(CultureInfo.InvariantCulture)))
    }
    <br />
    <br />
    <label>Condi&ccedil;&atilde;o do paciente na alta:</label>&nbsp;    
    @foreach (var value in Enum.GetValues(typeof(ConditionOfThePatientAtHighEnum)).Cast<short>().ToList())
    {
        <input type="radio" name="ConditionAtDischarge"  @if (value == 1)
                                                         { 
                                                                    @:required 
                                                                }  value="@value" style="margin-right: 2px;" @if (((SummaryModel)Model).DischargeData.ConditionAtDischarge == value)
                                                                                                             {
                                                                                                                 @:checked
                                                                                                             }/>
        @EnumUtil.GetDescriptionFromEnumValue((ConditionOfThePatientAtHighEnum)Enum.Parse(typeof(ConditionOfThePatientAtHighEnum), value.ToString(CultureInfo.InvariantCulture)))
    }
    <br />
    <br />
    <label>Destino do paciente na alta:</label>&nbsp;
    @foreach (var value in Enum.GetValues(typeof(DestinationOfThePatientAtDischargeEnum)).Cast<short>().ToList())
    {
        <input type="radio" name="DestinationOfThePatientAtDischarge"  @if (value == 1)
                                                                       { 
                                                                           @:required 
                                                                       }  value="@value" style="margin-right: 2px;" @if (((SummaryModel)Model).DischargeData.DestinationOfThePatientAtDischarge == value)
                                                                                                                    {
                                                                                                                        @:checked
                                                                                                                    }/>
        @EnumUtil.GetDescriptionFromEnumValue((DestinationOfThePatientAtDischargeEnum)Enum.Parse(typeof(DestinationOfThePatientAtDischargeEnum), value.ToString(CultureInfo.InvariantCulture)))
    }
    <br />
    <hr />
    <br />
    <label>Orienta&ccedil;&atilde;o das equipes multidisciplinares preenchidas:</label>&nbsp;
    @foreach (var value in Enum.GetValues(typeof(OrientationOfMultidisciplinaryTeamsMetEnum)).Cast<short>().ToList())
    {
        <input type="radio" name="MultidisciplinaryTeamsMet"  @if (value == 1)
                                                              {
                                                                  @:required 
                                                              }  value="@value" style="margin-right: 2px;"@if (((SummaryModel)Model).DischargeData.MultidisciplinaryTeamsMet == value)
                                                                                                          {
                                                                                                                           @:checked
                                                                                                                       }/>
        @EnumUtil.GetDescriptionFromEnumValue((OrientationOfMultidisciplinaryTeamsMetEnum)Enum.Parse(typeof(OrientationOfMultidisciplinaryTeamsMetEnum), value.ToString(CultureInfo.InvariantCulture)))
    }
    <br />
    <hr />
    <br />
    <h3>Prazo para Revis&atilde;o:</h3>
    <br />
    @{
        Html.RenderPartial("DischargeData/_MedicalReviewTable");
    }
    <br />
    <hr />
    <br />
    <h3>Exames complementares p&oacute;s alta:</h3>
    <br />
    @{
        Html.RenderPartial("DischargeData/_ComplementaryExamTable");
    }
    <br />
    <hr />
    <br />
    @{
        var accountM = ((SummaryModel)Model).Account;
        var hospital = ((SummaryModel)Model).Hospital;

        var professionalRegistration = accountM.ProfessionalRegistration.Where(h => h.State.Id == hospital.State.Id);

        if (professionalRegistration.Any())
        {
        <label>@EnumUtil.GetDescriptionFromEnumValue((ProfessionalRegistrationTypeEnum)Enum.Parse(typeof(ProfessionalRegistrationTypeEnum), professionalRegistration.SingleOrDefault().Type.ToString(CultureInfo.InvariantCulture))):
        </label>
        @:&nbsp;<input type="text" disabled value="@professionalRegistration.SingleOrDefault().Number" />

        <br />
        <br />
        <label>M&eacute;dico:</label>@:&nbsp;<input type="text" disabled value="@(string.Concat(((SummaryModel)Model).Account.FirstName, " ", ((SummaryModel)Model).Account.LastName))"/>
        <br />
        <br />
        }
    }
    <label>Alta Prescrita:</label>&nbsp;
    @{
        ViewBag.Context = "PrescribedHigh";
        //Html.RenderPartial("_DatePicker");
    }
    <input type="text" name="dischargeDate" maxlength="10">
    <input type="hidden" name="PrescribedHighday" />
    <input type="hidden" name="PrescribedHighmonth" />
    <input type="hidden" name="PrescribedHighyear" />
    &nbsp;&nbsp;<input type="time" name="PrescribedDischargeTime" maxlength="5" value="@{
        var hour = ((SummaryModel)Model).DischargeData.PrescribedHighHour;
        if (hour.ToString(CultureInfo.InvariantCulture).Length < 2)
        {
                                                                                @(string.Concat(0, hour))
        }
        else
        {
                                                                                @hour
        }
                                                                         }:@{
                                                                             var minute = ((SummaryModel)Model).DischargeData.PrescribedHighMinute;
                                                                             if (minute.ToString(CultureInfo.InvariantCulture).Length < 2)
                                                                             {
                                                                                 @(string.Concat(0, minute))
                                                                             }
                                                                             else
                                                                             {
                                                                                 @minute
                                                                             }
                                                                            }" />
    <br />
    <hr />
    <br />
    <label>Sum&aacute;rio entregue a:</label>&nbsp;
    <input type="text" name="PersonWhoDeliveredTheSummary" required value="@(((SummaryModel)Model).DischargeData.PersonWhoDeliveredTheSummary)" />
    <br />
    <br />
    <label>Data:</label>&nbsp;
    @{
        ViewBag.Context = "DeliveredDate";
        //Html.RenderPartial("_DatePicker");
    }
    <input type="text" name="deliveredDate" maxlength="10">
    <input type="hidden" name="DeliveredDateday" />
    <input type="hidden" name="DeliveredDatemonth" />
    <input type="hidden" name="DeliveredDateyear" />
    <br />
    <hr />
    <br />
    <input type="submit" value="Salvar" class="uibutton large confirm" style="margin-right: 5px;" />
    <input type="reset" value="Cancelar" class="uibutton large" style="margin-right: 5px" />
    @{
        var summaryM = (SummaryModel)Session["summary"];
        var accoutUser = (AccountModel)Session["account"];
        if (accoutUser.ProfessionalRegistration.Any(p => p.Type != 2) && summaryM.DischargeData.HighType > 0)
        {
        <input type="button" value="Finalizar" id="finalizeSummary" class="uibutton large special" onclick="FinalizeSummary();" style="margin-right: 5px" />
        }
        else
        {
        <input type="button" value="Finalizar" id="finalizeSummary" class="uibutton large special" onclick="FinalizeSummary();" style="margin-right: 5px; display: none;" />
        }
    }
    @{
        var summary = (SummaryModel)Model;
        var account = ((AccountModel)Session["Account"]);
        if (summary.Finalized)
        {
            var action = summary.Actions.OrderByDescending(x => x.Id).FirstOrDefault();

            if (action.Account.Id == account.Id)
            {
        <input type="button" value="Reabrir" class="uibutton large special" onclick="ReOpenSummary();" />
        <script type="text/javascript">
            RemoveEdition(true);
        </script>
            }
            else
            {
        <input type="button" value="Reabrir" class="uibutton large special" onclick="ReOpenSummary();" style="display: none;" />
        <script type="text/javascript">
            RemoveEdition(false);
        </script>
            }
        <script type="text/javascript">
            $("#prescriptionsReport").show();
            $("#summaryReport").show();
        </script>
        }
        else if (!account.ProfessionalRegistration.Any(x => x.State.Id == summary.Hospital.State.Id))
        {
        <script type="text/javascript">
            RemoveEdition(false);
        </script>
        }
        else
        {
        <input type="button" value="Reabrir" class="uibutton large special" onclick="ReOpenSummary();" style="display: none;" />
        }
        <a href="@Url.Action("GeneratePrescriptionsReport", new { id = "PDF" })" id="prescriptionsReport" target="_blank" class="uibutton large special" style="text-decoration: none; margin-right: 5px;display: none;">Imprimir Prescricao de Alta</a>
        <a href="@Url.Action("GenerateSummayReport", new { id = "PDF" })" id="summaryReport" target="_blank" class="uibutton large special" style="text-decoration: none;display: none;">Imprimir Sumario de Alta</a> 
    }
    <script type="text/javascript">

        $("#dischargeData input[name='dischargeDate']").val(String(@(((SummaryModel)Model).DischargeData.PrescribedHighDay)) + "/" + String(@(((SummaryModel)Model).DischargeData.PrescribedHighMonth)) + "/" + String(@(((SummaryModel)Model).DischargeData.PrescribedHighYear)));
        $("#dischargeData input[name='deliveredDate']").val(String(@(((SummaryModel)Model).DischargeData.DeliveredDateDay)) + "/" + String(@(((SummaryModel)Model).DischargeData.DeliveredDateMonth)) + "/" + String(@(((SummaryModel)Model).DischargeData.DeliveredDateYear)));

        @*        
        $('[name="PrescribedHighyear"]').val(@(((SummaryModel)Model).DischargeData.PrescribedHighYear));
        $('[name="PrescribedHighmonth"]').val(@(((SummaryModel)Model).DischargeData.PrescribedHighMonth));
        $('[name="PrescribedHighday"]').val(@(((SummaryModel)Model).DischargeData.PrescribedHighDay));

        $('[name="DeliveredDateyear"]').val(@(((SummaryModel)Model).DischargeData.DeliveredDateYear));
        $('[name="DeliveredDatemonth"]').val(@(((SummaryModel)Model).DischargeData.DeliveredDateMonth));
        $('[name="DeliveredDateday"]').val(@(((SummaryModel)Model).DischargeData.DeliveredDateDay));
        *@


        $(document).ready(function () {

            $("#dischargeData input[name='dischargeDate'").datepicker();
            $("#dischargeData input[name='dischargeDate'").mask("99/99/9999");
            $("#dischargeData input[name='deliveredDate'").datepicker();
            $("#dischargeData input[name='deliveredDate'").mask("99/99/9999");

            $("#dischargeData input[type='submit']").click(function () {

                if ($("#dischargeData input[name='highType']:checked").length == "0") {

                    displayMessage("Um tipo de alta deve ser selecionado.", "error");
                    //MarkInvalidField(secondEmailField);
                    $("#dischargeData input[name='highType']")[0].focus();
                    return false;
                }

                if ($("#dischargeData input[name='ConditionAtDischarge']:checked").length == "0") {

                    displayMessage("Um tipo de condi&ccedil;&atilde;o deve ser selecionado.", "error");
                    //MarkInvalidField(secondEmailField);
                    $("#dischargeData input[name='ConditionAtDischarge']")[0].focus();
                    return false;
                }

                if ($("#dischargeData input[name='DestinationOfThePatientAtDischarge']:checked").length == "0") {

                    displayMessage("Um tipo de destino deve ser selecionado.", "error");
                    //MarkInvalidField(secondEmailField);
                    $("#dischargeData input[name='DestinationOfThePatientAtDischarge']")[0].focus();
                    return false;
                }

                if ($("#dischargeData input[name='dischargeDate']").val() == "") {

                    displayMessage("A data de alta deve ser preenchida.", "error");
                    //MarkInvalidField(secondEmailField);
                    $("#dischargeData input[name='dischargeDate']").focus();
                    return false;
                }

                if ($("#dischargeData input[name='dischargeDate']").val() != "") {

                    var splitDate = $("#dischargeData input[name='dischargeDate']").val().split("/");

                    $("#dischargeData input[name='PrescribedHighday']").val(splitDate[0]);
                    $("#dischargeData input[name='PrescribedHighmonth']").val(splitDate[1]);
                    $("#dischargeData input[name='PrescribedHighyear']").val(splitDate[2]);
                }

                if ($("#dischargeData input[name='deliveredDate']").val() == "") {

                    displayMessage("A data de alat deve ser preenchida.", "error");
                    //MarkInvalidField(secondEmailField);
                    $("#dischargeData input[name='dischargeDate']").focus();
                    return false;
                }

                if ($("#dischargeData input[name='deliveredDate']").val() != "") {

                    var splitDate = $("#dischargeData input[name='deliveredDate']").val().split("/");

                    $("#dischargeData input[name='DeliveredDateday']").val(splitDate[0]);
                    $("#dischargeData input[name='DeliveredDatemonth']").val(splitDate[1]);
                    $("#dischargeData input[name='DeliveredDateyear']").val(splitDate[2]);
                }
            });
        });

    </script>
</form>
